#+author: bazaluga (bzalugas)

* ft_printf-breaker
ft_printf-breaker is my personal tester for my 42's ft_printf project. This is not the official tests but only the ones I think are important. The best thing to do is to use the maximum tests/testers to be sure your ft_printf is perfect.

* IMPORTANT INFORMATION
** Running tests on ubuntu
If you run the tests on ubuntu machine (with same version as 42), you can use normal tests. These tests compare original printf function with yours.
** Running tests on other OS
I also created a "static" version, that doesn't compare original function but the expected results on ubuntu. To use it, run ~make srun~.

* Installation
*You will need to add the following rule (replacing corresponding variables names by yours) in your ft_printf's Makefile to create a shared library (.so). If you don't plan to use the tester with macos, you can copy only the first rule.*
#+begin_src makefile
ifneq ($(shell uname), Darwin)
breaker:
			$(CC) -nostartfiles -shared -fPIC -ldl $(CFLAGS) -o ft_printf.so $(SRC) $(SRCBONUS) #rule for ubuntu
else
breaker:
			$(CC) -dynamiclib $(CFLAGS) -o ft_printf.so $(SRC) $(SRCBONUS) -L../obj -lmalloc # rule for macos
endif
#+end_src

The default structure for the folders is:
#+begin_example
.
|- ft_printf/
|- ft_printf-breaker/
#+end_example
You can change this by changing the ~$(PRINTFDIR)~ variable in Makefile.

* Usage
Just run ~make run~ and the Makefile will build your libft & launch the tests.

If you want to run "static tests", run ~make srun~.

* Informations
The ft_printf-breaker uses [[https://cutest.sourceforge.net/][CuTest]] for unit testing ft_printf. It is really simple to use and it takes only 2 files to work. If you want to create your own unit tests or modify mine, you can do so easily.
